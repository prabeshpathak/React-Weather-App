{"version":3,"sources":["component/weather.component.jsx","component/search.component.jsx","App.js","index.js"],"names":["Weather","props","className","city","avgTemp","icons","description","temp_max","temp_min","Search","error","alert","onSubmit","loadWeather","type","name","autoComplete","placeholder","App","getWeather","e","a","preventDefault","target","elements","value","country","fetch","api_call","json","response","console","log","setState","idForIcon","weather","id","sys","temperature","toCelsius","main","temp","temperature_max","temperature_min","fontIcon","toFixed","state","rangeId","this","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.d216fdc1.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./weather.styles.css\";\n\nconst Weather = (props) => {\n  return (\n    <div className=\"container\">\n      <div className=\"name-container\">\n        <h1>{props.city}</h1>\n      </div>\n      <div className=\"avg-temp\">\n        {props.avgTemp ? <h2>{props.avgTemp}&deg;c</h2> : null}\n      </div>\n      <div className=\"description\">\n        <h2>\n          {props.icons} {props.description}\n        </h2>\n      </div>\n      <div className=\"min-max\">\n        {props.temp_max ? (\n          <h2 className=\"max\">{props.temp_max}&deg;c</h2>\n        ) : null}\n        {props.temp_min ? (\n          <h2 className=\"min\">{props.temp_min}&deg;c</h2>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n\nexport default Weather;\n","import React from \"react\";\nimport './search.styles.css'\n\nconst Search = (props) => {\n  return (\n    <div className=\"containerer\">\n      <div>{props.error ? error() : null}</div>\n      <form onSubmit={props.loadWeather}>\n      <input\n        type=\"text\"\n        className=\"searchbox\"\n        name=\"city\"\n        autoComplete=\"off\"\n        placeholder=\"City\"\n      />\n\n      <input\n        type=\"text\"\n        className=\"searchbox\"\n        name=\"country\"\n        autoComplete=\"off\"\n        placeholder=\"Country\"\n      />\n      <button>Get weather</button>\n      </form>\n    </div>\n  );\n};\n\n\nfunction error(){\n  alert\n  (\"Please enter city and country\")\n}\n\nexport default Search;\n","import React, { Component } from \"react\";\nimport Weather from \"./component/weather.component\";\nimport Search from \"./component/search.component\";\nimport \"./component/weather-icons.css\";\n\nconst api = \"429736441cf3572838aa10530929f7cd\";\n// (`https://api.openweathermap.org/data/2.5/weather?q=London,uk&appid=${api}`);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      idForIcon: \"\",\n      city: \"\",\n      temperature: \"\",\n      description: \"\",\n      temperature_max: \"\",\n      temperature_min: \"\",\n      icons: \"\",\n      error: false,\n    };\n  }\n\n  getWeather = async (e) => {\n    e.preventDefault();\n\n    const city = e.target.elements.city.value;\n    const country = e.target.elements.country.value;\n    if (city && country){\n      const api_call = await fetch(\n        `https://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${api}`\n      );\n      const response = await api_call.json();\n      console.log(response);\n  \n      this.setState({\n        idForIcon: response.weather[0].id,\n        city: `${response.name}, ${response.sys.country}`,\n        temperature: this.toCelsius(response.main.temp),\n        description: response.weather[0].description,\n        temperature_max: this.toCelsius(response.main.temp_max),\n        temperature_min: this.toCelsius(response.main.temp_min),\n      });\n  \n      this.fontIcon(response.weather[0].id);\n    }else{\n      this.setState({error: true})\n    }\n  };\n\n  toCelsius = (temperature) => {\n    return (temperature - 273).toFixed(1);\n  };\n\n  fontIcon(rangeId) {\n    switch (true) {\n      case rangeId >= 200 && rangeId < 232:\n        this.setState({ icons: \"wi wi-thunderstorm\" });\n        // this.setState({ icon: this.weatherIcon.thunderstorm });\n        break;\n      case rangeId >= 300 && rangeId <= 321:\n        this.setState({ icons: \"wi wi-sprinkle\" });\n        // this.setState({ icon: this.weatherIcon.drizzle });\n        break;\n      case rangeId >= 500 && rangeId <= 521:\n        this.setState({ icons: \"wi wi-rain\" });\n        // this.setState({ icon: this.weatherIcon.rain });\n        break;\n      case rangeId >= 600 && rangeId <= 622:\n        this.setState({ icons: \"wi wi-snow\" });\n        // this.setState({ icon: this.weatherIcon.snow });\n        break;\n      case rangeId >= 701 && rangeId <= 781:\n        this.setState({ icons: \"wi wi-fog\" });\n        // this.setState({ icon: this.weatherIcon.atmosphere });\n        break;\n      case rangeId === 800:\n        this.setState({ icons: \"wi wi-day-sunny\" });\n        // this.setState({ icon: this.weatherIcon.clear });\n        break;\n      case rangeId >= 801 && rangeId <= 804:\n        this.setState({ icons: \"wi wi-cloud\" });\n        // this.setState({ icon: this.weatherIcon.clouds });\n        break;\n      default:\n        this.setState({ icons: \"wi wi-day-cloudy-high\" });\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Search loadWeather={this.getWeather} error = {this.state.error} />\n        <Weather\n          idForIcon={this.state.idForIcon}\n          city={this.state.city}\n          country={this.state.country}\n          avgTemp={this.state.temperature}\n          description={this.state.description}\n          temp_max={this.state.temperature_max}\n          temp_min={this.state.temperature_min}\n          icons={<i className={this.state.icons}></i>}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDom from \"react-dom\";\nimport App from \"./App\";\n\nReactDom.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}